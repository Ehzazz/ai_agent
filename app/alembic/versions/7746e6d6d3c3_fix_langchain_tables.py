"""fix_langchain_tables

Revision ID: 7746e6d6d3c3
Revises: 378bf88a2d3b
Create Date: 2025-07-22 13:01:39.709942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7746e6d6d3c3'
down_revision: Union[str, Sequence[str], None] = '378bf88a2d3b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('langchain_pg_collection', sa.Column('uuid', sa.UUID(), nullable=False))
    op.add_column('langchain_pg_collection', sa.Column('cmetadata', sa.JSON(), nullable=True))
    # Make uuid unique (or primary key)
    op.create_unique_constraint("uq_langchain_pg_collection_uuid", "langchain_pg_collection", ["uuid"])
    # Drop the foreign key constraint first
    op.drop_constraint('langchain_pg_embedding_collection_id_fkey', 'langchain_pg_embedding', type_='foreignkey')
    op.drop_column('langchain_pg_collection', 'id')
    op.add_column('langchain_pg_embedding', sa.Column('uuid', sa.UUID(), nullable=False))
    op.alter_column('langchain_pg_embedding', 'cmetadata',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True)
    op.create_foreign_key('langchain_pg_embedding_collection_id_fkey', 'langchain_pg_embedding', 'langchain_pg_collection', ['collection_id'], ['uuid'])
    op.drop_column('langchain_pg_embedding', 'id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('langchain_pg_embedding', sa.Column('id', sa.UUID(), autoincrement=False, nullable=False))
    #op.drop_constraint('langchain_pg_embedding_collection_id_fkey', 'langchain_pg_embedding', type_='foreignkey')
    op.create_foreign_key('langchain_pg_embedding_collection_id_fkey', 'langchain_pg_embedding', 'langchain_pg_collection', ['collection_id'], ['id'])
    op.alter_column('langchain_pg_embedding', 'cmetadata',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.drop_column('langchain_pg_embedding', 'uuid')
    op.add_column('langchain_pg_collection', sa.Column('id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_column('langchain_pg_collection', 'cmetadata')
    op.drop_column('langchain_pg_collection', 'uuid')
    # ### end Alembic commands ###
